{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { sleep } from \"../helpers\";\nimport auth from '@react-native-firebase/auth';\nvar USERNAME = 'Moos';\nvar PASS = '123';\nimport { initializeApp } from \"firebase/app\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDrZnbdLt7_BdYKSp233GQsNNaLAWBzuGY\",\n  authDomain: \"harvest-e44d8.firebaseapp.com\",\n  projectId: \"harvest-e44d8\",\n  storageBucket: \"harvest-e44d8.appspot.com\",\n  messagingSenderId: \"680484773343\",\n  appId: \"1:680484773343:web:77bb7da602150a8433786a\"\n};\nvar app = initializeApp(firebaseConfig);\nexport function signUp(username, password, callback) {\n  return _regeneratorRuntime.async(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(sleep(2000));\n\n        case 2:\n          if (username === USERNAME && password === PASS) {\n            callback('SUCCESS');\n          } else {\n            callback('Login failed!');\n          }\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signUpUser(username, password) {\n  return auth().createUserWithEmailAndPassword(username, password);\n}\nexport function signInAsync(username, password) {\n  return auth().signInWithEmailAndPassword(username, password);\n}","map":{"version":3,"sources":["C:/Users/tomch/OneDrive/Documents/GitHub/harvest/services/api.service.tsx"],"names":["sleep","auth","USERNAME","PASS","initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","signUp","username","password","callback","signUpUser","createUserWithEmailAndPassword","signInAsync","signInWithEmailAndPassword"],"mappings":";AAAA,SAAQA,KAAR;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AAEA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,IAAI,GAAG,KAAb;AAGA,SAASC,aAAT,QAA8B,cAA9B;AAKA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,+BAFS;AAGrBC,EAAAA,SAAS,EAAE,eAHU;AAIrBC,EAAAA,aAAa,EAAE,2BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AAUA,IAAMC,GAAG,GAAGR,aAAa,CAACC,cAAD,CAAzB;AAEA,OAAO,SAAeQ,MAAf,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEChB,KAAK,CAAC,IAAD,CAFN;;AAAA;AAGL,cAAIc,QAAQ,KAAKZ,QAAb,IAAyBa,QAAQ,KAAKZ,IAA1C,EAAgD;AAC9Ca,YAAAA,QAAQ,CAAC,SAAD,CAAR;AACD,WAFD,MAEO;AACLA,YAAAA,QAAQ,CAAC,eAAD,CAAR;AACD;;AAPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,OAAO,SAASC,UAAT,CAAoBH,QAApB,EAA8BC,QAA9B,EAAsD;AAC3D,SAAOd,IAAI,GAAGiB,8BAAP,CAAsCJ,QAAtC,EAAgDC,QAAhD,CAAP;AACD;AAED,OAAO,SAASI,WAAT,CAAqBL,QAArB,EAA+BC,QAA/B,EAAyC;AAC9C,SAAOd,IAAI,GAAGmB,0BAAP,CAAkCN,QAAlC,EAA4CC,QAA5C,CAAP;AACD","sourcesContent":["import {sleep} from '../helpers';\r\nimport auth from '@react-native-firebase/auth';\r\n\r\nconst USERNAME = 'Moos';\r\nconst PASS = '123';\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDrZnbdLt7_BdYKSp233GQsNNaLAWBzuGY\",\r\n  authDomain: \"harvest-e44d8.firebaseapp.com\",\r\n  projectId: \"harvest-e44d8\",\r\n  storageBucket: \"harvest-e44d8.appspot.com\",\r\n  messagingSenderId: \"680484773343\",\r\n  appId: \"1:680484773343:web:77bb7da602150a8433786a\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport async function signUp(username, password, callback) {\r\n  //after 5 secounds\r\n  await sleep(2000);\r\n  if (username === USERNAME && password === PASS) {\r\n    callback('SUCCESS');\r\n  } else {\r\n    callback('Login failed!');\r\n  }\r\n}\r\n\r\nexport function signUpUser(username, password): Promise<any> {\r\n  return auth().createUserWithEmailAndPassword(username, password);\r\n}\r\n\r\nexport function signInAsync(username, password) {\r\n  return auth().signInWithEmailAndPassword(username, password);\r\n}"]},"metadata":{},"sourceType":"module"}