{"ast":null,"code":"import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport * as React from \"react\";\nimport MainScreen from \"../screens/MainScreen\";\nimport FavouriteScreen from \"../screens/FavouriteScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar tab = createBottomTabNavigator();\n\nvar AfterLogin = function AfterLogin(_ref) {\n  var route = _ref.route;\n  var profileName = route.params.profileName;\n  var name = profileName;\n  return React.createElement(tab.Navigator, {\n    screenOptions: {\n      tabBarShowLabel: false,\n      tabBarStyle: {\n        position: \"absolute\",\n        borderTopLeftRadius: 15,\n        borderTopRightRadius: 15,\n        backgroundColor: \"#000000\",\n        height: 90\n      }\n    }\n  }, React.createElement(tab.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    options: {\n      title: name,\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/home_48.png\"),\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? \"#ffffff\" : \"#a8a8a8\"\n          }\n        }), React.createElement(Text, {\n          style: {\n            color: focused ? \"#ffffff\" : \"#a8a8a8\"\n          }\n        }, \"Home\"));\n      },\n      headerStyle: {\n        elevation: 0,\n        shadowOpacity: 0,\n        borderBottomWidth: 0\n      }\n    }\n  }), React.createElement(tab.Screen, {\n    name: \"Favourite\",\n    component: FavouriteScreen,\n    options: {\n      title: name,\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/favorite_48.png\"),\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? \"#ffffff\" : \"#a8a8a8\"\n          }\n        }), React.createElement(Text, {\n          style: {\n            color: focused ? \"#ffffff\" : \"#a8a8a8\"\n          }\n        }, \"Favourite\"));\n      },\n      headerStyle: {\n        elevation: 0,\n        shadowOpacity: 0,\n        borderBottomWidth: 0\n      }\n    }\n  }), React.createElement(tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    options: {\n      title: name,\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/settings_48.png\"),\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? \"#ffffff\" : \"#a8a8a8\"\n          }\n        }), React.createElement(Text, {\n          style: {\n            color: focused ? \"#ffffff\" : \"#a8a8a8\"\n          }\n        }, \"Settings\"));\n      },\n      headerStyle: {\n        elevation: 0,\n        shadowOpacity: 0,\n        borderBottomWidth: 0\n      }\n    }\n  }));\n};\n\nexport default AfterLogin;","map":{"version":3,"sources":["C:/Users/tomch/OneDrive/Documents/GitHub/harvest/screens/AfterLogin.tsx"],"names":["createBottomTabNavigator","React","MainScreen","FavouriteScreen","SettingsScreen","tab","AfterLogin","route","profileName","params","name","tabBarShowLabel","tabBarStyle","position","borderTopLeftRadius","borderTopRightRadius","backgroundColor","height","title","tabBarIcon","focused","alignItems","justifyContent","require","width","tintColor","color","headerStyle","elevation","shadowOpacity","borderBottomWidth"],"mappings":"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","sourcesContent":["import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport * as React from \"react\";\r\nimport MainScreen from \"../screens/MainScreen\";\r\nimport FavouriteScreen from \"../screens/FavouriteScreen\";\r\nimport SettingsScreen from \"../screens/SettingsScreen\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\n\r\nimport { StyleSheet, View, Image, Text } from \"react-native\";\r\n\r\nconst tab = createBottomTabNavigator();\r\n\r\nconst AfterLogin = ({ route }: { route: any }) => {\r\n  const { profileName } = route.params;\r\n  let name: string = profileName;\r\n\r\n  return (\r\n    <tab.Navigator\r\n      screenOptions={{\r\n        tabBarShowLabel: false,\r\n        tabBarStyle: {\r\n          position: \"absolute\",\r\n          borderTopLeftRadius: 15,\r\n          borderTopRightRadius: 15,\r\n          backgroundColor: \"#000000\",\r\n          height: 90,\r\n        },\r\n      }}\r\n    >\r\n      <tab.Screen\r\n        name=\"Main\"\r\n        component={MainScreen}\r\n        options={{\r\n          title: name,\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n              <Image\r\n                source={require(\"../assets/home_48.png\")}\r\n                resizeMode=\"contain\"\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  tintColor: focused ? \"#ffffff\" : \"#a8a8a8\",\r\n                }}\r\n              />\r\n              <Text style={{ color: focused ? \"#ffffff\" : \"#a8a8a8\" }}>\r\n                Home\r\n              </Text>\r\n            </View>\r\n          ),\r\n          headerStyle: {\r\n            elevation: 0, // remove shadow on Android\r\n            shadowOpacity: 0, // remove shadow on iOS\r\n            borderBottomWidth: 0, // Just in case.\r\n          },\r\n        }}\r\n      />\r\n      <tab.Screen\r\n        name=\"Favourite\"\r\n        component={FavouriteScreen}\r\n        options={{\r\n          title: name,\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n              <Image\r\n                source={require(\"../assets/favorite_48.png\")}\r\n                resizeMode=\"contain\"\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  tintColor: focused ? \"#ffffff\" : \"#a8a8a8\",\r\n                }}\r\n              />\r\n              <Text style={{ color: focused ? \"#ffffff\" : \"#a8a8a8\" }}>\r\n                Favourite\r\n              </Text>\r\n            </View>\r\n          ),\r\n          headerStyle: {\r\n            elevation: 0, // remove shadow on Android\r\n            shadowOpacity: 0, // remove shadow on iOS\r\n            borderBottomWidth: 0, // Just in case.\r\n          },\r\n        }}\r\n      />\r\n      <tab.Screen\r\n        name=\"Settings\"\r\n        component={SettingsScreen}\r\n        options={{\r\n          title: name,\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n              <Image\r\n                source={require(\"../assets/settings_48.png\")}\r\n                resizeMode=\"contain\"\r\n                style={{\r\n                  width: 25,\r\n                  height: 25,\r\n                  tintColor: focused ? \"#ffffff\" : \"#a8a8a8\",\r\n                }}\r\n              />\r\n              <Text style={{ color: focused ? \"#ffffff\" : \"#a8a8a8\" }}>\r\n                Settings\r\n              </Text>\r\n            </View>\r\n          ),\r\n          headerStyle: {\r\n            elevation: 0, // remove shadow on Android\r\n            shadowOpacity: 0, // remove shadow on iOS\r\n            borderBottomWidth: 0, // Just in case.\r\n          },\r\n        }}\r\n      />\r\n    </tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default AfterLogin;\r\n"]},"metadata":{},"sourceType":"module"}