{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { validateEmail } from \"../helpers\";\nimport { signUpUser } from \"../services/api.service\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useFonts, Montserrat_400Regular } from \"@expo-google-fonts/montserrat\";\nimport AppLoading from \"expo-app-loading\";\n\nvar SignUpPage = function SignUpPage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pass = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passConfirm = _useState6[0],\n      setPasswordConfirm = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      status = _useState8[0],\n      setStatus = _useState8[1];\n\n  var _useFonts = useFonts({\n    Montserrat_400Regular: Montserrat_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, null);\n  }\n\n  function signUp() {\n    return _regeneratorRuntime.async(function signUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(user.length <= 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert('Please enter a username');\n            return _context.abrupt(\"return\");\n\n          case 3:\n            if (validateEmail(user)) {\n              _context.next = 6;\n              break;\n            }\n\n            Alert.alert('Please enter a valid email');\n            return _context.abrupt(\"return\");\n\n          case 6:\n            if (!(pass.length <= 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            Alert.alert('Please enter a password');\n            return _context.abrupt(\"return\");\n\n          case 9:\n            if (!(pass !== passConfirm)) {\n              _context.next = 12;\n              break;\n            }\n\n            Alert.alert('Please confirm password');\n            return _context.abrupt(\"return\");\n\n          case 12:\n            setStatus('Registering ..');\n            signUpUser(user, pass).then(function () {\n              console.log('Successfully created');\n              Alert.alert('Account created, you can now login');\n              navigation.goBack();\n            }).catch(function (error) {\n              if (error.code === 'auth/email-already-in-use') {\n                console.log('Email address is already taken');\n              }\n\n              if (error.code === 'auth/invalid-email') {\n                console.log('This is not a valid email');\n              }\n\n              console.error(error);\n              Alert.alert(\"\" + error);\n            });\n            return _context.abrupt(\"return\");\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.wrapper\n  }, React.createElement(KeyboardAwareScrollView, null, React.createElement(View, {\n    style: styles.topBox\n  }, React.createElement(Image, {\n    style: styles.iconStyle,\n    source: require(\"./assets/placeholder_logo.png\")\n  }), React.createElement(Text, {\n    style: styles.textStyle\n  }, \"Sign Up With Harvest\")), React.createElement(View, {\n    style: styles.bottomBox\n  }, React.createElement(Text, {\n    style: styles.UserPasswordText\n  }, \"Username\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"username\",\n    value: user,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    }\n  }), React.createElement(Text, {\n    style: styles.UserPasswordText\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.input,\n    secureTextEntry: true,\n    placeholder: \"password\",\n    value: pass,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    }\n  }), React.createElement(Text, {\n    style: styles.UserPasswordText\n  }, \"Confirm Password\"), React.createElement(TextInput, {\n    style: styles.input,\n    secureTextEntry: true,\n    placeholder: \"password\",\n    value: passConfirm,\n    onChangeText: function onChangeText(text) {\n      return setPasswordConfirm(text);\n    }\n  }), React.createElement(Text, null, status), React.createElement(View, {\n    style: styles.navButtonsWrapper\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    onPress: function onPress() {\n      signUpUser();\n      navigation.navigate(\"LoginPage\");\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonFont\n  }, \"Sign Up\"))))));\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    flex: 1\n  },\n  topBox: {\n    flex: 3,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    padding: 50\n  },\n  bottomBox: {\n    flex: 2,\n    justifyContent: \"flex-end\",\n    padding: 50\n  },\n  navButtonsWrapper: {\n    height: 100\n  },\n  iconStyle: {\n    width: 150,\n    height: 150\n  },\n  buttonStyle: {\n    backgroundColor: \"black\",\n    padding: 10,\n    alignItems: \"center\",\n    marginBottom: 25,\n    marginTop: 25\n  },\n  buttonFont: {\n    color: \"white\"\n  },\n  textStyle: {\n    fontSize: 32\n  },\n  UserPasswordText: {\n    fontFamily: \"Montserrat_400Regular\",\n    fontSize: 20,\n    margin: 12\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default SignUpPage;","map":{"version":3,"sources":["C:/Users/tomch/OneDrive/Documents/GitHub/harvest/screens/SignUpPage.tsx"],"names":["React","useState","KeyboardAwareScrollView","validateEmail","signUpUser","useFonts","Montserrat_400Regular","AppLoading","SignUpPage","navigation","user","setUsername","pass","setPassword","passConfirm","setPasswordConfirm","status","setStatus","fontsLoaded","error","signUp","length","Alert","alert","then","console","log","goBack","catch","code","styles","wrapper","topBox","iconStyle","require","textStyle","bottomBox","UserPasswordText","input","text","navButtonsWrapper","buttonStyle","navigate","buttonFont","StyleSheet","create","flex","justifyContent","alignItems","padding","height","width","backgroundColor","marginBottom","marginTop","color","fontSize","fontFamily","margin","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport {validateEmail} from '../helpers';\r\nimport {signUpUser} from '../services/api.service';\r\nimport {\r\n  SafeAreaView,\r\n  View,\r\n  FlatList,\r\n  StyleSheet,\r\n  Text,\r\n  Image,\r\n  TextInput,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Button,\r\n} from \"react-native\";\r\nimport { useFonts, Montserrat_400Regular } from \"@expo-google-fonts/montserrat\";\r\nimport AppLoading from \"expo-app-loading\";\r\n\r\nconst SignUpPage = ({ navigation }: { navigation: any }) => {\r\n  const [user, setUsername] = useState(\"\");\r\n  const [pass, setPassword] = useState(\"\");\r\n  const [passConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  let [fontsLoaded, error] = useFonts({\r\n    Montserrat_400Regular,\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  }\r\n\r\n\r\n  async function signUp() {\r\n    if (user.length <= 0) {\r\n      Alert.alert('Please enter a username');\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(user)) {\r\n      Alert.alert('Please enter a valid email');\r\n      return;\r\n    }\r\n    if (pass.length <= 0) {\r\n      Alert.alert('Please enter a password');\r\n      return;\r\n    }\r\n\r\n    if (pass !== passConfirm) {\r\n      Alert.alert('Please confirm password');\r\n      return;\r\n    }\r\n\r\n    setStatus('Registering ..');\r\n\r\n    signUpUser(user, pass)\r\n      .then(() => {\r\n        console.log('Successfully created');\r\n        Alert.alert('Account created, you can now login');\r\n        navigation.goBack();\r\n      })\r\n      .catch(error => {\r\n        if (error.code === 'auth/email-already-in-use') {\r\n          console.log('Email address is already taken');\r\n        }\r\n\r\n        if (error.code === 'auth/invalid-email') {\r\n          console.log('This is not a valid email');\r\n        }\r\n\r\n        console.error(error);\r\n        Alert.alert(`${error}`);\r\n      });\r\n\r\n    return;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={styles.wrapper}>\r\n       <KeyboardAwareScrollView>\r\n      <View style={styles.topBox}>\r\n        <Image\r\n          style={styles.iconStyle}\r\n          source={require(\"./assets/placeholder_logo.png\")}\r\n        />\r\n        <Text style={styles.textStyle}>Sign Up With Harvest</Text>\r\n      </View>\r\n\r\n      <View style={styles.bottomBox}>\r\n        <Text style={styles.UserPasswordText}>Username</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"username\"\r\n          value={user}\r\n          autoCapitalize=\"none\"\r\n          onChangeText={(text) => setUsername(text)}\r\n        />\r\n        <Text style={styles.UserPasswordText}>Password</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          secureTextEntry={true}\r\n          placeholder=\"password\"\r\n          value={pass}\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n         <Text style={styles.UserPasswordText}>Confirm Password</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          secureTextEntry={true}\r\n          placeholder=\"password\"\r\n          value={passConfirm}\r\n          onChangeText={(text) => setPasswordConfirm(text)}\r\n        />\r\n        <Text>{status}</Text>\r\n        <View style={styles.navButtonsWrapper}>\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={() => {\r\n              signUpUser()\r\n              navigation.navigate(\"LoginPage\");\r\n            }}\r\n          >\r\n            <Text style={styles.buttonFont}>Sign Up</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      </KeyboardAwareScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  wrapper: {\r\n    flex: 1,\r\n  },\r\n  topBox: {\r\n    flex: 3,\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    padding: 50,\r\n  },\r\n\r\n  bottomBox: {\r\n    flex: 2,\r\n    justifyContent: \"flex-end\",\r\n    padding: 50,\r\n  },\r\n  navButtonsWrapper: {\r\n    height: 100,\r\n  },\r\n  iconStyle: {\r\n    width: 150,\r\n    height: 150,\r\n  },\r\n\r\n  buttonStyle: {\r\n    backgroundColor: \"black\",\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n\r\n  buttonFont: {\r\n    color: \"white\",\r\n  },\r\n\r\n  textStyle: {\r\n    fontSize: 32,\r\n  },\r\n  UserPasswordText: {\r\n    fontFamily: \"Montserrat_400Regular\",\r\n    fontSize: 20,\r\n    margin: 12,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default SignUpPage;\r\n"]},"metadata":{},"sourceType":"module"}