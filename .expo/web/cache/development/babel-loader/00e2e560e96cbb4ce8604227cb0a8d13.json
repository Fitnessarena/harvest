{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { sleep } from \"../helpers\";\nimport firebase from 'firebase/compat';\nimport 'firebase/compat/auth';\nvar USERNAME = 'Moos';\nvar PASS = '1234';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDrZnbdLt7_BdYKSp233GQsNNaLAWBzuGY\",\n  authDomain: \"harvest-e44d8.firebaseapp.com\",\n  projectId: \"harvest-e44d8\",\n  storageBucket: \"harvest-e44d8.appspot.com\",\n  messagingSenderId: \"680484773343\",\n  appId: \"1:680484773343:web:77bb7da602150a8433786a\"\n};\nvar app;\n\nif (firebase.apps.length === 0) {\n  app = firebase.initializeApp(firebaseConfig);\n} else {\n  app = firebase.app();\n}\n\nvar auth = firebase.auth();\nexport function signUp(username, password, callback) {\n  return _regeneratorRuntime.async(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(sleep(2000));\n\n        case 2:\n          if (username === USERNAME && password === PASS) {\n            callback('SUCCESS');\n          } else {\n            callback('Login failed!');\n          }\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signUpUser(username, password) {\n  return auth.createUserWithEmailAndPassword(username, password);\n}\nexport function signInAsync(username, password) {\n  return auth.signInWithEmailAndPassword(username, password);\n}","map":{"version":3,"sources":["C:/Users/tomch/OneDrive/Documents/GitHub/harvest/services/api.service.tsx"],"names":["sleep","firebase","USERNAME","PASS","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","apps","length","initializeApp","auth","signUp","username","password","callback","signUpUser","createUserWithEmailAndPassword","signInAsync","signInWithEmailAndPassword"],"mappings":";AAAA,SAAQA,KAAR;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,sBAAP;AAEA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,IAAI,GAAG,MAAb;AAMA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,+BAFO;AAGnBC,EAAAA,SAAS,EAAE,eAHQ;AAInBC,EAAAA,aAAa,EAAE,2BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAAvB;AAWE,IAAIC,GAAJ;;AAEA,IAAIV,QAAQ,CAACW,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BF,EAAAA,GAAG,GAAGV,QAAQ,CAACa,aAAT,CAAuBV,cAAvB,CAAN;AACD,CAFD,MAEO;AACLO,EAAAA,GAAG,GAAGV,QAAQ,CAACU,GAAT,EAAN;AACD;;AAED,IAAMI,IAAI,GAAGd,QAAQ,CAACc,IAAT,EAAb;AAGF,OAAO,SAAeC,MAAf,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAECnB,KAAK,CAAC,IAAD,CAFN;;AAAA;AAGL,cAAIiB,QAAQ,KAAKf,QAAb,IAAyBgB,QAAQ,KAAKf,IAA1C,EAAgD;AAC9CgB,YAAAA,QAAQ,CAAC,SAAD,CAAR;AACD,WAFD,MAEO;AACLA,YAAAA,QAAQ,CAAC,eAAD,CAAR;AACD;;AAPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,OAAO,SAASC,UAAT,CAAoBH,QAApB,EAA8BC,QAA9B,EAAsD;AAC3D,SAAOH,IAAI,CAACM,8BAAL,CAAoCJ,QAApC,EAA8CC,QAA9C,CAAP;AACD;AAED,OAAO,SAASI,WAAT,CAAqBL,QAArB,EAA+BC,QAA/B,EAAyC;AAC9C,SAAOH,IAAI,CAACQ,0BAAL,CAAgCN,QAAhC,EAA0CC,QAA1C,CAAP;AACD","sourcesContent":["import {sleep} from '../helpers';\r\nimport firebase from 'firebase/compat';\r\nimport 'firebase/compat/auth';\r\n\r\nconst USERNAME = 'Moos';\r\nconst PASS = '1234';\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDrZnbdLt7_BdYKSp233GQsNNaLAWBzuGY\",\r\n    authDomain: \"harvest-e44d8.firebaseapp.com\",\r\n    projectId: \"harvest-e44d8\",\r\n    storageBucket: \"harvest-e44d8.appspot.com\",\r\n    messagingSenderId: \"680484773343\",\r\n    appId: \"1:680484773343:web:77bb7da602150a8433786a\"\r\n  };\r\n  \r\n  \r\n  // Initialize Firebase\r\n  let app;\r\n  \r\n  if (firebase.apps.length === 0) {\r\n    app = firebase.initializeApp(firebaseConfig)\r\n  } else {\r\n    app = firebase.app();\r\n  }\r\n\r\n  const auth = firebase.auth()\r\n\r\n\r\nexport async function signUp(username, password, callback) {\r\n  //after 5 secounds\r\n  await sleep(2000);\r\n  if (username === USERNAME && password === PASS) {\r\n    callback('SUCCESS');\r\n  } else {\r\n    callback('Login failed!');\r\n  }\r\n}\r\n\r\nexport function signUpUser(username, password): Promise<any> {\r\n  return auth.createUserWithEmailAndPassword(username, password);\r\n}\r\n\r\nexport function signInAsync(username, password) {\r\n  return auth.signInWithEmailAndPassword(username, password);\r\n}"]},"metadata":{},"sourceType":"module"}